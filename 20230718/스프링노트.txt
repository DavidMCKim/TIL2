* 스프링 부트가 제공하는 WelcomePage 기능
	- `static/index.html`을 올려두면 Welcome page 기능을 제공한다.

* thymeleaf 템플릿 엔진
	- thymeleaf 공식 사이트 : https://www.thymeleaf.org/
	- 스프링 공식 튜토리얼 : https://spring.io/guides/gs/serving-web-content/
	- 스프링부트 메뉴얼 : 

* 컨트롤러에서 리턴 값으로 문자를 반환하면 뷰 리졸버 ('viewResolver')가 화면을 찾아서 처리한다.
	- 스프링 부트 템플릿엔진 기본 viewName 매핑
	- 'resources:templates/' + {ViewName} + '.html'

** 참고 : 'spring-boot-devtools'라이브러리를 추가하면, 'html'파일을 컴파일만 해주면 서버 재시작 없이 View 파일 변경이 가능하다.
intelliJ 컴파일 방법 : 메뉴 build >> Recompile



------------------------------------------------------------------------------------------------------------------------------------------------



** 스프링 웹 개발 기초

- 정적 컨텐츠
- MVC와 템플릿 엔진
- API

* 정적 컨텐츠
	- 스프링 부트 정적 컨텐츠 기능

* MVC와 템플릿 엔진
	- MVC : Model, View, Controller

* API
	- @ResponseBody 를 사용
		- HTTP의 BODY에 문자내용을 직접 반환
		- viewResolver 대신 HttpMessageConverter가 동작
		- 기본 문자 처리 : StringHttpMessageConverter
		- 기본 객체 처리 : MappingJackson2HttpMessageConverter
		- byte 처리 등등 기타 여러 HttpMessageConverter가 기본으로 등록되어 있음
		** 참고 : 클라이언트의 HTTP Accept 헤더와 서버의 컨트롤러 반환 타입 정보 둘을 조합해서
		            HttpMessageConverter 가 선택된다.